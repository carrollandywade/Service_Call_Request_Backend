# Generated by Django 3.1.8 on 2021-08-21 04:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContractedCopier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=50)),
                ('serial_number', models.CharField(max_length=50)),
                ('service_history', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=50)),
                ('contact_name', models.CharField(max_length=50)),
                ('contact_phone', models.CharField(max_length=50)),
                ('contact_email', models.EmailField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FieldTechnician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technician_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager_name', models.CharField(max_length=50)),
                ('manager_email', models.EmailField(max_length=254, null=True)),
                ('territory_region', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ETA', models.DateTimeField(blank=True, default=None, null=True)),
                ('dispatch_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('arrive_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('problem_description', models.CharField(max_length=150)),
                ('special_instructions', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('escalate_service', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('assigned_technician', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='callrouting.fieldtechnician')),
                ('contracted_copier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='callrouting.contractedcopier')),
                ('manager', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='callrouting.manager')),
            ],
        ),
        migrations.AddField(
            model_name='fieldtechnician',
            name='technician_manager',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='callrouting.manager'),
        ),
        migrations.CreateModel(
            name='CopierTraining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=50)),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='callrouting.fieldtechnician')),
            ],
        ),
        migrations.AddField(
            model_name='contractedcopier',
            name='customers',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='callrouting.customer'),
        ),
    ]
